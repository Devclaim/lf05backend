/*
 * This file is generated by jOOQ.
 */
package jooq_gen.tables.records;


import jooq_gen.tables.Rezeptzutat;
import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RezeptzutatRecord extends TableRecordImpl<RezeptzutatRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.rezeptzutat.rezeptnr</code>.
     */
    public RezeptzutatRecord setRezeptnr(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.rezeptzutat.rezeptnr</code>.
     */
    public Integer getRezeptnr() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.rezeptzutat.zutatnr</code>.
     */
    public RezeptzutatRecord setZutatnr(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.rezeptzutat.zutatnr</code>.
     */
    public Integer getZutatnr() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.rezeptzutat.menge</code>.
     */
    public RezeptzutatRecord setMenge(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.rezeptzutat.menge</code>.
     */
    public Integer getMenge() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Rezeptzutat.REZEPTZUTAT.REZEPTNR;
    }

    @Override
    public Field<Integer> field2() {
        return Rezeptzutat.REZEPTZUTAT.ZUTATNR;
    }

    @Override
    public Field<Integer> field3() {
        return Rezeptzutat.REZEPTZUTAT.MENGE;
    }

    @Override
    public Integer component1() {
        return getRezeptnr();
    }

    @Override
    public Integer component2() {
        return getZutatnr();
    }

    @Override
    public Integer component3() {
        return getMenge();
    }

    @Override
    public Integer value1() {
        return getRezeptnr();
    }

    @Override
    public Integer value2() {
        return getZutatnr();
    }

    @Override
    public Integer value3() {
        return getMenge();
    }

    @Override
    public RezeptzutatRecord value1(Integer value) {
        setRezeptnr(value);
        return this;
    }

    @Override
    public RezeptzutatRecord value2(Integer value) {
        setZutatnr(value);
        return this;
    }

    @Override
    public RezeptzutatRecord value3(Integer value) {
        setMenge(value);
        return this;
    }

    @Override
    public RezeptzutatRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RezeptzutatRecord
     */
    public RezeptzutatRecord() {
        super(Rezeptzutat.REZEPTZUTAT);
    }

    /**
     * Create a detached, initialised RezeptzutatRecord
     */
    public RezeptzutatRecord(Integer rezeptnr, Integer zutatnr, Integer menge) {
        super(Rezeptzutat.REZEPTZUTAT);

        setRezeptnr(rezeptnr);
        setZutatnr(zutatnr);
        setMenge(menge);
    }
}
