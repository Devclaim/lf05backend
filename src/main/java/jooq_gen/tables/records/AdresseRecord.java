/*
 * This file is generated by jOOQ.
 */
package jooq_gen.tables.records;


import jooq_gen.tables.Adresse;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdresseRecord extends UpdatableRecordImpl<AdresseRecord> implements Record4<Integer, String, String, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.adresse.adressid</code>.
     */
    public AdresseRecord setAdressid(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.adresse.adressid</code>.
     */
    public Integer getAdressid() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.adresse.strasse</code>.
     */
    public AdresseRecord setStrasse(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.adresse.strasse</code>.
     */
    public String getStrasse() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.adresse.hausnr</code>.
     */
    public AdresseRecord setHausnr(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.adresse.hausnr</code>.
     */
    public String getHausnr() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.adresse.regionid</code>.
     */
    public AdresseRecord setRegionid(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.adresse.regionid</code>.
     */
    public Integer getRegionid() {
        return (Integer) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, Integer> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, Integer> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Adresse.ADRESSE.ADRESSID;
    }

    @Override
    public Field<String> field2() {
        return Adresse.ADRESSE.STRASSE;
    }

    @Override
    public Field<String> field3() {
        return Adresse.ADRESSE.HAUSNR;
    }

    @Override
    public Field<Integer> field4() {
        return Adresse.ADRESSE.REGIONID;
    }

    @Override
    public Integer component1() {
        return getAdressid();
    }

    @Override
    public String component2() {
        return getStrasse();
    }

    @Override
    public String component3() {
        return getHausnr();
    }

    @Override
    public Integer component4() {
        return getRegionid();
    }

    @Override
    public Integer value1() {
        return getAdressid();
    }

    @Override
    public String value2() {
        return getStrasse();
    }

    @Override
    public String value3() {
        return getHausnr();
    }

    @Override
    public Integer value4() {
        return getRegionid();
    }

    @Override
    public AdresseRecord value1(Integer value) {
        setAdressid(value);
        return this;
    }

    @Override
    public AdresseRecord value2(String value) {
        setStrasse(value);
        return this;
    }

    @Override
    public AdresseRecord value3(String value) {
        setHausnr(value);
        return this;
    }

    @Override
    public AdresseRecord value4(Integer value) {
        setRegionid(value);
        return this;
    }

    @Override
    public AdresseRecord values(Integer value1, String value2, String value3, Integer value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdresseRecord
     */
    public AdresseRecord() {
        super(Adresse.ADRESSE);
    }

    /**
     * Create a detached, initialised AdresseRecord
     */
    public AdresseRecord(Integer adressid, String strasse, String hausnr, Integer regionid) {
        super(Adresse.ADRESSE);

        setAdressid(adressid);
        setStrasse(strasse);
        setHausnr(hausnr);
        setRegionid(regionid);
    }
}
