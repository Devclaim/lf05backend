/*
 * This file is generated by jOOQ.
 */
package jooq_gen.tables.records;


import jooq_gen.tables.Bestellung;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import java.math.BigDecimal;
import java.time.LocalDate;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BestellungRecord extends UpdatableRecordImpl<BestellungRecord> implements Record4<Integer, LocalDate, BigDecimal, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bestellung.bestellnr</code>.
     */
    public BestellungRecord setBestellnr(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.bestellung.bestellnr</code>.
     */
    public Integer getBestellnr() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.bestellung.bestelldatum</code>.
     */
    public BestellungRecord setBestelldatum(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.bestellung.bestelldatum</code>.
     */
    public LocalDate getBestelldatum() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.bestellung.rechnungsbetrag_brutto</code>.
     */
    public BestellungRecord setRechnungsbetragBrutto(BigDecimal value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.bestellung.rechnungsbetrag_brutto</code>.
     */
    public BigDecimal getRechnungsbetragBrutto() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>public.bestellung.rechnungsbetrag_netto</code>.
     */
    public BestellungRecord setRechnungsbetragNetto(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.bestellung.rechnungsbetrag_netto</code>.
     */
    public BigDecimal getRechnungsbetragNetto() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, LocalDate, BigDecimal, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, LocalDate, BigDecimal, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Bestellung.BESTELLUNG.BESTELLNR;
    }

    @Override
    public Field<LocalDate> field2() {
        return Bestellung.BESTELLUNG.BESTELLDATUM;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Bestellung.BESTELLUNG.RECHNUNGSBETRAG_BRUTTO;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Bestellung.BESTELLUNG.RECHNUNGSBETRAG_NETTO;
    }

    @Override
    public Integer component1() {
        return getBestellnr();
    }

    @Override
    public LocalDate component2() {
        return getBestelldatum();
    }

    @Override
    public BigDecimal component3() {
        return getRechnungsbetragBrutto();
    }

    @Override
    public BigDecimal component4() {
        return getRechnungsbetragNetto();
    }

    @Override
    public Integer value1() {
        return getBestellnr();
    }

    @Override
    public LocalDate value2() {
        return getBestelldatum();
    }

    @Override
    public BigDecimal value3() {
        return getRechnungsbetragBrutto();
    }

    @Override
    public BigDecimal value4() {
        return getRechnungsbetragNetto();
    }

    @Override
    public BestellungRecord value1(Integer value) {
        setBestellnr(value);
        return this;
    }

    @Override
    public BestellungRecord value2(LocalDate value) {
        setBestelldatum(value);
        return this;
    }

    @Override
    public BestellungRecord value3(BigDecimal value) {
        setRechnungsbetragBrutto(value);
        return this;
    }

    @Override
    public BestellungRecord value4(BigDecimal value) {
        setRechnungsbetragNetto(value);
        return this;
    }

    @Override
    public BestellungRecord values(Integer value1, LocalDate value2, BigDecimal value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BestellungRecord
     */
    public BestellungRecord() {
        super(Bestellung.BESTELLUNG);
    }

    /**
     * Create a detached, initialised BestellungRecord
     */
    public BestellungRecord(Integer bestellnr, LocalDate bestelldatum, BigDecimal rechnungsbetragBrutto, BigDecimal rechnungsbetragNetto) {
        super(Bestellung.BESTELLUNG);

        setBestellnr(bestellnr);
        setBestelldatum(bestelldatum);
        setRechnungsbetragBrutto(rechnungsbetragBrutto);
        setRechnungsbetragNetto(rechnungsbetragNetto);
    }
}
